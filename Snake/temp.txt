                            #if 0
                            while (SDL_PollEvent(&event))
                            {
                                switch(event.type)
                                {
                                    case SDL_QUIT:
                                        state = EXIT;
                                    break;
                                    case SDL_KEYDOWN:

                                        switch (event.key.keysym.sym) {
                                        case SDLK_UP:pause = false;
                                            if(direction.y == 0)
                                            {direction.x = 0; direction.y = -CELL;}
                                            break;
                                        case SDLK_DOWN:pause = false;
                                            if(direction.y == 0)
                                            {direction.x = 0; direction.y = CELL;}
                                            break;
                                        case SDLK_LEFT:pause = false;
                                            if(direction.x == 0)
                                            {direction.x = -CELL; direction.y = 0;}
                                            break;
                                        case SDLK_RIGHT:pause = false;
                                            if(direction.x == 0)
                                            {direction.x = CELL; direction.y = 0;}
                                            break;
                                        case SDLK_SPACE:
                                            pause = !pause;
                                            break;
                                        case SDLK_r:
                                            newgame(); lose = false;soundhasnotplay = true;
                                            break;
                                        }
                                    break;

                                }
                            }

                            if(pause){
                                goto here;

                            }
                            updateHead();
                            checkCollisions();
                            here:
                            if(lose){
                                if(soundhasnotplay){Mix_PlayChannel(-1, chunks[Death], 0);soundhasnotplay = false;}
                                texts[GameOver]->renderText(140,450,white);
                                texts[GameOver2]->renderText(140,450,black);

                            }
                            else{
                            if(collisonWithTLFood()){
                                Mix_PlayChannel(-1, chunks[Eat], 0);
                                delay-=(20/FoodsEated);
                                makeTLfood();

                            }
                            renderGame(pictures);

                                auto* eyeTexture = IMG_LoadTexture(renderer, eyePath[frame%13]);
                                SDL_RenderCopy(renderer,eyeTexture,NULL,&head);
                                SDL_DestroyTexture(eyeTexture);

                            frame++;
                            }
                            //score
                            SDL_RenderCopy(renderer,icons[Score],NULL,&iconsPos[Score]);
                            SDL_RenderCopy(renderer,icons[Trophy],NULL,&iconsPos[Trophy]);
//                            renderScore(texts[Point]);

                            for(int id = 0; id < Icons; id++){
                                SDL_RenderCopy(renderer,icons[id],NULL,&iconsPos[id]);
                            }

                            SDL_RenderPresent(renderer);SDL_Delay(delay);
                            #endif
